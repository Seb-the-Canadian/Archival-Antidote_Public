 📜 Hardware Inventory Shortcut Development Log

## **📌 Project Overview**

### **Goal**

The objective of this project was to design an efficient and fully automated **hardware inventory management system**using **iOS Shortcuts** and **Obsidian**. The system had to:

- **Use barcode scanning as the primary method** of adding items.
    
- **Support OCR (Text Recognition) for devices without barcodes**.
    
- **Allow web search for product families** where no label exists.
    
- **Include voice dictation for additional notes**.
    
- **Store inventory in an Obsidian Markdown database** formatted for **Dataview queries**.
    
- **Enable batch scanning** for faster inventory input.
    
- **Automatically create the inventory file** if missing.
    

## **🛠️ Development Process**

### **1️⃣ Initial Concept**

- The initial plan was to use **Scriptable** for barcode scanning and data processing.
    
- However, **Scriptable does not support barcode scanning natively**, so an alternative approach was required.
    

### **2️⃣ Transition to iOS Shortcuts**

- We **migrated the workflow entirely to iOS Shortcuts**, which supports barcode scanning natively.
    
- The first working version allowed **basic barcode input** and **manual entry if a barcode was unavailable**.
    

### **3️⃣ Expanding Functionality**

- **OCR text recognition** was added for scanning printed labels.
    
- **Web search integration** was introduced for product families.
    
- **Voice dictation** was implemented to capture additional details.
    

### **4️⃣ Formatting for Obsidian & Dataview**

- Markdown formatting was adjusted to be **Dataview-friendly**.
    
- The shortcut was modified to **create** `**hardware_inventory.md**` **if missing**, preventing manual setup issues.
    
- **Batch mode** was introduced to allow scanning multiple items in one session.
    

### **5️⃣ Final Troubleshooting & Optimization**

- Improved **error handling** for barcode scanning and OCR failures.
    
- **Delays were added** to prevent dictation input loss.
    
- Google search was modified to open Safari instead of relying on automated parsing.
    
- Markdown formatting was **fully refined** to ensure structured data storage.
    

## **🚀 Final Solution: iOS Shortcut Workflow**

1. **Checks if** `**hardware_inventory.md**` **exists** in `iCloud Drive > Obsidian > YourVaultName`.
    
2. **Creates the inventory file** if it doesn’t exist.
    
3. **Scans a barcode** (if available).
    
4. **If no barcode, offers alternative input:**
    
    - 📷 **OCR (Text Recognition)**
        
    - 🌐 **Web Search for Product Family**
        
    - ✍️ **Manual Product Entry**
        
5. **Captures voice notes about the item**.
    
6. **Formats everything into Markdown**.
    
7. **Appends the data to Obsidian’s inventory file**.
    
8. **Offers batch mode to scan multiple items in a row**.
    

## **📂 Implementation Instructions**

To build this shortcut, follow the detailed step-by-step guide (Insert guide link here).

## **📚 Lessons Learned**

1. **Leverage iOS Shortcuts for native features** when possible.
    
2. **Error handling is critical for a smooth user experience**.
    
3. **Dataview formatting ensures Obsidian remains organized**.
    
4. **Batch scanning significantly speeds up data entry**.
    

## **📥 Download & Installation**

- Shortcut: [Insert iCloud Shortcut link here]
    
- Obsidian Example File: [Insert GitHub repo link here]
    

## **🌟 Next Steps**

---

📌 **This document serves as a record of our development process and learnings for future projects.**